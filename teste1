//  1º teste: fazer um sistema de 4 ou 6 jogadores que recebem 3 cartas cada, após elas serem embaralhadas.
//  Por hora, são consideradas as seguintes classes: Carta, Baralho, Jogador, Time e Controlador (que controlará o jogo).
//
//  A) Setar o número de jogadores; (TESTADO)

#include <iostream>
#include "Controlador.h"

Controlador ctr;

void set_jogadores(){
	char *n = new char;
	std::cout << "\n" << "Insira o numero de jogadores" << "\n";
	std::cin >> n;
	if (n[0] != '4' && n[0] != '6'){
		std::cout << "\n" << "Numero invalido. Insira novamente." << "\n";
		set_jogadores();
	} else {
		std::cout << "\n" << "Numero de jogadores definido." << "\n";
		ctr.set_numero_jogadores(((int)n[0] - 48)); // 48 serve para compensar códigos ASCII, pois caso contrário o número teria valor 52 ou 54
	}
}

int main(){

	set_jogadores();
	std::cout << "\n" << "O numero de jogadores e " << ctr.get_numero_jogadores() << "\n";

	getchar();
	getchar();

}


//  B) Ler e embaralhar as cartas;






//  C) Distribuir três cartas para cada jogador.




#pragma once
#include <vector>
#include <algorithm>
#include <fstream>
#include "Carta.h"
class Baralho
{
private:
	std::vector<Carta> baralho;

public:
	Baralho(){};
	~Baralho(){};

	void ler_baralho(bool tira89){

		std::ifstream leitor_cartas;
		leitor_cartas.open("cartas.txt");

		for(int i = 0; i < 48; i++){

			Carta carta;
			char *linha_lida = new char;
			bool carta_elegivel = false;

			leitor_cartas.getline(linha_lida, 4);
			carta.set_numero(atoi(linha_lida));

			if(carta.get_numero != 8 && carta.get_numero != 9){
				carta_elegivel = true;
			} else if(tira89 == false){ carta_elegivel = true; }

			if(carta_elegivel == true){

				leitor_cartas = NULL;
				leitor_cartas.getline(linha_lida, 4);
				carta.set_naipe(atoi(linha_lida));
				leitor_cartas = NULL;
				leitor_cartas.getline(linha_lida, 4);
				carta.set_valor(atoi(linha_lida));
				leitor_cartas = NULL;

				baralho.push_back(carta);

			}

		}
	
		leitor_cartas.close();

	}
	
	void embaralhar(){ random_shuffle(baralho.begin(), baralho.end()); }

};
